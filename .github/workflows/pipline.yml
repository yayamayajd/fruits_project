name: cicd pipline Fruits-Project

on:
  push:
    branches:
      - main

# most of the actions step:
# 1 checkout repo, 2 setup running env, 3 install dependencies (from requirements.txt)
# 4 run test, 5 build, 6 push the built image, 7 deploy
jobs:
  pipline-biuld-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13.2
          cache: pip
          architecture: arm64




      - name: install dependencies
        run: pip install -r requirements.txt

      - name: Load DATABASE_URL for testing
        run: echo "DATABASE_URL=${{ secrets.DATABASE_URL_TEST }}" >> $GITHUB_ENV


      - name: run tests
        run: pytest tests/


      - name: login docker registry
        env: #github secrets
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login $DOCKER_REGISTRY -u $DOCKER_USERNAME --password-stdin

      - name: build docker image
        run: docker build -t ${{ secrets.DOCKER_REGISTRY }}/fruits-project:latest .

      - name: push the docker image to ubuntu-on-NAS
        run: docker push ${{ secrets.DOCKER_REGISTRY }}/fruits-project:latest

      - name: Replace DOCKER_REGISTRY in Deployment YAML
        run: |
          export DOCKER_REGISTRY=${{ secrets.DOCKER_REGISTRY }}
          envsubst < kubernetes/flask-deployment.yml > kubernetes/flask-deployment.tmp.yml
          mv kubernetes/flask-deployment.tmp.yml kubernetes/flask-deployment.yml




      - name: deploy postgres&APP to K8S
        env: #use the github secrets
          UBUNTU_SSH_HOST: ${{ secrets.UBUNTU_IP }}
          UBUNTU_SSH_USER: ${{ secrets.UBUNTU_USER }}
          UBUNTU_SSH_KEY: ${{ secrets.UBUNTU_ON_NAS_SSH_PRIVATE_KEY }}
        run: |
          printf "%s\n" "$UBUNTU_SSH_KEY" > ssh_key 
          chmod 600 ssh_key
          ssh -o StrictHostKeyChecking=no -i ssh_key $UBUNTU_SSH_USER@$UBUNTU_SSH_HOST << 'EOF'
            echo "Connected!"
            set -e
            cd /home/${{ secrets.UBUNTU_USER }}/fruit/fruits_project || exit 1
            git pull origin main
            microk8s kubectl apply -f kubernetes/postgres-service.yml
            microk8s kubectl apply -f kubernetes/postgres-statefulset.yml
            microk8s kubectl apply -f kubernetes/flask-service.yml
            microk8s kubectl apply -f kubernetes/flask-deployment.yml
          EOF
          rm -f ssh_key

